@model Firma.Data.Data.Customers.User
@using Firma.Data.Data.Customers @* using dla enuma usera, podział na 3 role *@

@{
    ViewData["Title"] = "Edytuj użytkownika";
}

<h1>@ViewData["Title"]</h1>

<h4>Dane użytkownika: @Model.Name</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdUser" />

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Name" class="form-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Email" class="form-label"></label>
                        <input asp-for="Email" class="form-control" type="email" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Phone" class="form-label"></label>
                        <input asp-for="Phone" class="form-control" type="tel" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Role" class="form-label"></label>
                        <select asp-for="Role" class="form-select" asp-items="Html.GetEnumSelectList<UserRole>()"></select>
                        <span asp-validation-for="Role" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="HashedPassword" class="form-label">Nowe hasło (hash lub tymczasowe) - zostaw puste, aby nie zmieniać</label>
                <input asp-for="HashedPassword" class="form-control" type="text" value="" /> @* Ustawiam value="", aby nie wyświetlać starego hasha. Nowa wartość nadpisze starą tylko jeśli zostanie wpisana. *@
                <span asp-validation-for="HashedPassword" class="text-danger"></span>
                @* Logika aktualizacji hasła w kontrolerze powinna sprawdzać, czy pole jest puste, do zrobienia później *@
            </div>

            <div class="mb-3">
                <label asp-for="RegistrationDate" class="form-label">Data rejestracji</label>
                <input asp-for="RegistrationDate" class="form-control" readonly /> @* Data rejestracji tylko do odczytu *@
            </div>

            <div class="mt-4">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save me-1"></i> Zapisz zmiany
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left-circle me-1"></i> Anuluj
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}